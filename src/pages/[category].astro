---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection, render } from "astro:content"; // ðŸ‘ˆ import render
import Sidebar from "../components/Sidebar.astro";
import type { CollectionEntry } from "astro:content";

type Post = CollectionEntry<"posts">;
type Category = CollectionEntry<"category">;

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const categories: Category[] = await getCollection("category");

  return categories.map((cat) => ({
    params: { category: cat.slug },
    props: { category: cat, posts },
  }));
}

const { category, posts } = Astro.props as {
  category: Category;
  posts: Post[];
};

const categoryPosts = posts.filter(
  (p) => p.data.category?.toLowerCase() === category.slug.toLowerCase()
);

// ðŸ‘‡ use render() helper
const { Content } = await render(category);
const currentUrl = Astro.url.href; // full URL of the current page

---




<BaseLayout 
  title={category.data.title} 
  description={category.data.description}
  image={`/assets/images/blog/${category.data.image}`}
>
<Fragment slot="head">
  <script
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@graph": [
      {
        "@type": "WebSite",
        "@id": "https://www.wikimint.com#website",
        url: "https://www.wikimint.com",
        name: "Wikimint",
        publisher: {
          "@type": "Organization",
          name: "Wikimint",
          url: "https://www.wikimint.com"
        }
      },
      {
        "@type": "WebPage",
        "@id": currentUrl + "#webpage",
        url: currentUrl,
        name: category.data.title,
        description: category.data.description,  // âœ… fixed
        isPartOf: {
          "@id": "https://www.wikimint.com#website"
        },
        primaryImageOfPage: {
          "@id": currentUrl + "#primaryimage"   // âœ… made per-page unique
        }
      },
      {
  "@type": "ImageObject",
  "@id": currentUrl + "#primaryimage", // tied to current page
  url: `/assets/images/blog/${category.data.image}`,
  caption: category.data.title
}

    ]
  })}
/>

  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "CollectionPage",
      "name": category.data.title,
      "description": category.data.description,
      "url": `https://www.wikimint.com/${category.slug}`,
      "mainEntity": categoryPosts
        .sort((a, b) => new Date(b.data.date) - new Date(a.data.date)) // sort by date desc
        .slice(0, 6) // take latest 6
        .map((post) => ({
          "@type": "Article",
          "headline": post.data.title,
          "url": `https://www.wikimint.com/${post.slug}`,
          "datePublished": post.data.date,
          "description": post.data.description,
          "image": `https://www.wikimint.com/assets/images/blog/${post.data.image}`
        }))
    }, null, 2)}
  />

  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "ItemList",
      "name": `Posts in ${category.data.title}`,
      "itemListElement": categoryPosts
        .sort((a, b) => new Date(b.data.date) - new Date(a.data.date)) // sort by date desc
        .slice(0, 6) // latest 6
        .map((post, index) => ({
          "@type": "ListItem",
          "position": index + 1,
          "url": `https://www.wikimint.com/${post.slug}`,
          "name": post.data.title
        }))
    }, null, 2)}
  />
 
</Fragment>

  <div class="grid grid-cols-1 md:grid-cols-12 gap-6 md:gap-10 max-w-7xl mx-auto">
    <main class="col-span-12 md:col-span-7 prose lg:prose-xl max-w-none">
      
      <nav class="breadcrumbs border-b border-gray-400 pb-4 mb-5" 
      itemscope itemtype="https://schema.org/BreadcrumbList">
   
   <!-- Home -->
   <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
     <a href="https://www.wikimint.com" itemprop="item">
       <span itemprop="name" class="text-wmblue">Home</span>
     </a>
     <meta itemprop="position" content="1" />
   </span>
 
   <span> Â» </span>
 
   <!-- Category -->
   <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
    <span>
      {category.slug.charAt(0).toUpperCase() + category.slug.slice(1)}
    </span>
    <a href={`https://www.wikimint.com/${category.slug}`} itemprop="item">
      <span class="sr-only" itemprop="name">{category.data.title}<span/>
    </a>
     <!-- Structured data -->
     <meta itemprop="position" content="2" />
     <!-- Visible label: capitalized slug -->

    
   </span>
 
 </nav>
 
      
      <!-- Category Metadata -->
      <h1 class="text-3xl font-bold mb-2">{category.data.h1}</h1>
      <p class="bluebox">{category.data.description}</p>

      <!-- Posts list -->
      <h2 class="text-2xl font-semibold mt-10 mb-4">
        Posts in {category.data.title}
      </h2>
      <ul class="space-y-6">
        {categoryPosts.map((post: Post) => (
          <li class="border-b pb-4">
            <a href={`/${post.slug}`} class="text-lg font-semibold hover:underline">
              {post.data.title}
            </a>
            {post.data.description && (
              <p class="text-gray-600 mt-1">{post.data.description}</p>
            )}
            {post.data.date && (
              <p class="text-sm text-gray-500">
                {new Date(post.data.date).toDateString()}
              </p>
            )}
          </li>
        ))}
        
      </ul>

      <!-- Render markdown content from category file -->
      <Content />
    </main>

    <aside class="col-span-12 md:col-span-5">
      <Sidebar />
    </aside>
  </div>
</BaseLayout>
