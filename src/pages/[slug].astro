---
const version = Date.now();
import { getCollection, getEntry } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import Sidebar from "../components/Sidebar.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: (post as any).slug }, // ✅ silence TS
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();

const { content, data } = Astro.props;

// fetch author by slug (new API)
const author = await getEntry("authors", post.data.author);

// Generate simple TOC
const toc = headings;

// ✅ Get all posts for navigation + related
const allPosts = await getCollection("posts");

// Sort posts by date
allPosts.sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime());

// Find current index
const index = allPosts.findIndex((p) => p.slug === post.slug);

// Previous & next post
const prevPost = index > 0 ? allPosts[index - 1] : null;
const nextPost = index < allPosts.length - 1 ? allPosts[index + 1] : null;

// Related posts by category (excluding current)
const relatedPosts = allPosts
  .filter(
    (p) =>
      p.data.category === post.data.category &&
      p.slug !== post.slug
  )
  .slice(0, 3); // limit to 3
---


<BaseLayout title={post.data.title} description={post.data.description} image={`/assets/images/blog/${post.data.image}`}>
  <Fragment slot="head">
    <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Article",
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": `https://www.wikimint.com/${post.slug}`
      },
      "headline": post.data.title,
      "description": post.data.description,
      "image": {
        "@type": "ImageObject",
        "url": `https://www.wikimint.com/assets/images/blog/${post.data.image}`,
        "contentUrl": `https://www.wikimint.com/assets/images/blog/${post.data.image}`,
        "width": 800,   // optional
        "height": 600   // optional
      },
      "publisher": {
        "@type": "Organization",
        "name": "Wikimint",
        "logo": {
          "@type": "ImageObject",
          "url": "https://www.wikimint.com/assets/images/wikimint.webp"
        }
      },
      "author": {
        "@type": "Person",
        "name": (post?.data?.author ?? "Wikimint")
          .replace(/-/g, " ")
          .replace(/\b\w/g, (c) => c.toUpperCase()),
        "url": "https://www.wikimint.com/write-for-us"
      },
      "datePublished": post.data.date,
      "dateModified": post.data.updated ?? post.data.date
    }, null, 2)}
  ></script>
  
  </Fragment>
  

    <!-- 3-Column Layout -->
    <div class="grid grid-cols-1 md:grid-cols-12 gap-6 md:gap-10 max-w-7xl mx-auto">
      <div class="col-span-12 md:col-span-7">

      
  <nav class="breadcrumbs border-b border-gray-400 pb-4 mb-5" itemscope itemtype="https://schema.org/BreadcrumbList">
    <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
      <a href="https://www.wikimint.com" itemprop="item">
        <span itemprop="name" class="text-wmblue">Home</span>
      </a>
      <meta itemprop="position" content="1" />
    </span>
  
   
        <span> » </span>
        <span class="label" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
          <a href={`https://www.wikimint.com/${post.data.category.toLowerCase()}`} itemprop="item">
            <span itemprop="name"  class="text-wmblue">{post.data.category}</span>
          </a>
          <meta itemprop="position" content="2" />
        </span>
      </>
  
    <span> » </span>
    <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
      <span>{post.data.title}</span>
      <a href={`https://www.wikimint.com/${post.slug}`} itemprop="item">
        <span itemprop="name"  class="text-wmblue sr-only">{post.data.title}</span>
      </a>      
      <meta itemprop="position" content={post.data.category ? "3" : "2"} />
    </span>    
  </nav>
        <article class="prose lg:prose-xl max-w-none">
          
            <h1>{post.data.h1}</h1>
            <p class="text-sm opacity-70">
              {new Date(post.data.date).toDateString()} · <a href="#author">{author?.data?.name ?? "Unknown Author"}</a>
            </p>          
  
            {post.data.summary && (
              <p class="bluebox">
                {post.data.summary}
              </p>
            )}

          <div id="mainAd"></div>

          {toc && (
            <div class="wmdTOC graybox">
              <button>
                Table of Contents
                <span>
                  [<a rel="nofollow" onclick="mbtToggle2()" id="Tog">Hide</a>]
                </span>
              </button>
              <div id="wmdTOC" style="display:block;">
                    <ol>
                      {toc.map((item: { slug: string; text: string; depth: number }) => (
                        <li>
                          <a href={`#${item.slug}`}>{item.text}</a>
                        </li>
                      ))}
                    </ol>
                  </div>

            </div>
          )}
      
          <div class="post-content">
            <Content />
          
      
            {post.data.faq && post.data.faq.length > 0 && (
              <section class="my-8">
                <h2>Frequently Asked Questions</h2>
            
                <div class="numbered-h3 faq">
                  <!-- First 6 FAQ with schema markup -->
                  <div itemscope itemtype="https://schema.org/FAQPage">
                    {post.data.faq.slice(0, 6).map((item: { q: string; a: string }) => (
                      <div itemprop="mainEntity" itemscope itemtype="https://schema.org/Question">
                        <div itemprop="name">
                          <h3>{item.q}</h3>
                        </div>
                        <div itemprop="acceptedAnswer" itemscope itemtype="https://schema.org/Answer">
                          <div itemprop="text">

                            {item.a.match(/<\/?[a-z][\s\S]*>/i) ? (
                                <div set:html={item.a}></div>
                              ) : (
                                <p set:html={item.a}></p>
                              )}
                            </div>
                        </div>
                      </div>
                    ))}
                  </div>
            
                  <!-- Remaining FAQ (no schema) -->
                  {post.data.faq.length > 6 && (
                    post.data.faq.slice(6).map((item: { q: string; a: string }) => (
                      <div>
                        <h3>{item.q}</h3>
                        {item.a.match(/<\/?[a-z][\s\S]*>/i) ? (
                            <div set:html={item.a}></div>
                          ) : (
                            <p set:html={item.a}></p>
                          )}
                      </div>
                    ))
                  )}
                </div>
              </section>
            )}
            
          </div>  
      
          {author && (
            <div id="author" class="about-author not-prose mt-8 p-5 border border-wmblue flex items-center gap-7 h-card" itemscope itemtype="https://schema.org/Person">
              
              <!-- Left: Avatar -->
              <div class="w-1/4">
                <img 
                src={`https://www.wikimint.com${author.data.image}`}
                  alt={author.data.name} 
                  width={150}
                  height={150}
                  class="author-avatar rounded-md object-cover u-photo" 
                  itemprop="image" 
                  loading="lazy" 
                />
              </div>
          
              <!-- Right: Text -->
              <div class="w-3/4">
                <h3 class="author-name">
                  <span class="text-wmblue font-semibold text-xl">Written by </span>
                  <a href="https://www.wikimint.com" 
                     itemprop="url" 
                     rel="author noopener" 
                     target="_blank" 
                     class="text-wmblue hover:underline u-url">
                    <span itemprop="name" class="text-wmblue font-semibold text-xl p-name">{author.data.name}</span>
                  </a>
                </h3>
                <p class="author-description text-gray-700 pt-3 line-clamp-3 p-note" itemprop="description">
                  {author.data.bio}
                </p>
          
                {author.data.socials && (
                  <ul class="author-socials flex gap-3 pt-2">
                    {author?.data?.socials?.map((s: { label: string; url: string }) => (
                      <li>
                        <a 
                          href={s.url} 
                          target="_blank" 
                          rel="noopener nofollow" 
                          itemprop="sameAs" 
                          class="text-sm text-blue-500 hover:underline u-url">
                          {s.label}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </div>
            </div>
          )}
          
            

  
<!-- Prev / Next Navigation -->
<nav class="not-prose grid grid-cols-1 md:grid-cols-2 gap-4 my-8">
  {prevPost && (
    <a 
      href={`/${prevPost.slug}`} 
      class="flex items-top justify-start p-4 border border-gray-400 hover:bg-gray-50"
    >
      <span class="mr-4 mt-2 text-lg">

<img loading="lazy" src="/assets/svg/prev.svg" alt="Vieew previous post" width="100" height="100" class="w-[40px] text-gray:300"/>

      </span>
      <span class="text-blue-600 font-medium">{prevPost.data.title}</span>
    </a>
  )}

  {nextPost && (
    <a 
      href={`/${nextPost.slug}`} 
      class="flex items-top justify-end p-4 border border-gray-400 hover:bg-gray-50"
    >
      <span class="text-blue-600 font-medium">{nextPost.data.title}</span>
      <span class="ml-3 mt-2 text-lg">

<img loading="lazy" src="/assets/svg/next.svg" alt="Vieew next post" width="100" height="100" class="w-[40px] text-gray-100"/>

      </span>
    </a>
  )}
</nav>


<!-- Related Posts -->
{relatedPosts.length > 0 && (
  <section class="my-10 not-prose">
    <h2 class="text-xl font-semibold mb-4">Related Posts</h2>
    <ul class="space-y-3">
      {relatedPosts.map((rel) => (
        <li>
          <a href={`/${rel.slug}`} class="text-wmblue hover:underline">
            {rel.data.title}
          </a>
        </li>
      ))}
    </ul>
  </section>
)}


        <!-- Comments placeholder -->
        <section class="not-prose mt-12">
          <h2 class="text-xl font-semibold">Comments</h2>
          <p class="opacity-70">Comments feature coming soon.</p>
        </section>
      </div>
  
  
      <!-- Column 3: Sticky Bottom Ads (25%) -->
      <aside class="col-span-12 md:col-span-5">
          <Sidebar/>
        </div>
      </aside>
  
    </div>

    <script src={`/assets/js/posts.js?v=${version}`} defer></script>

      


</BaseLayout>
